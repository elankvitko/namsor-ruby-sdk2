=begin
#NamSor API v2

#NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 1000 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 

OpenAPI spec version: 2.0.2-beta
Contact: contact@namsor.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.0.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for NamSorClient::ChineseApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ChineseApi' do
  before do
    # run before each test
    @api_instance = NamSorClient::ChineseApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ChineseApi' do
    it 'should create an instance of ChineseApi' do
      expect(@api_instance).to be_instance_of(NamSorClient::ChineseApi)
    end
  end

  # unit tests for chinese_name_candidates
  # Identify Chinese name candidates, based on the romanized name.
  # @param chinese_surname_latin 
  # @param chinese_given_name_latin 
  # @param [Hash] opts the optional parameters
  # @return [RomanizedNameOut]
  describe 'chinese_name_candidates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for chinese_name_candidates_batch
  # Identify Chinese name candidates, based on the romanized name (firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname).
  # @param [Hash] opts the optional parameters
  # @option opts [BatchFirstLastNameIn] :batch_first_last_name_in A list of personal Chinese names in LATIN, firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname
  # @return [BatchNameMatchCandidatesOut]
  describe 'chinese_name_candidates_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for chinese_name_candidates_gender_batch
  # Identify Chinese name candidates, based on the romanized name (firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname).
  # @param [Hash] opts the optional parameters
  # @option opts [BatchFirstLastNameIn] :batch_first_last_name_in A list of personal Chinese names in LATIN, firstName &#x3D; chineseGivenName; lastName&#x3D;chineseSurname
  # @return [BatchNameMatchCandidatesOut]
  describe 'chinese_name_candidates_gender_batch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for chinese_name_gender_candidates
  # Identify Chinese name candidates, based on the romanized name - having a known gender (&#39;male&#39; or &#39;female&#39;)
  # @param chinese_surname_latin 
  # @param chinese_given_name_latin 
  # @param known_gender 
  # @param [Hash] opts the optional parameters
  # @return [RomanizedNameOut]
  describe 'chinese_name_gender_candidates test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
